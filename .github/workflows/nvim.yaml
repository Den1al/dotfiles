name: Neovim

on:
  push:
    paths:
      - "nvim/**"
  pull_request:
    paths:
      - "nvim/**"

jobs:
  test-nvim-config:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-14]
        nvim-version: ["v0.10.0"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: ${{ matrix.nvim-version }}

      - name: Install coreutils on macOS
        if: matrix.os == 'macos-14'
        run: brew install coreutils luajit

      - name: Create Neovim config directory
        run: |
          mkdir -p ~/.config/nvim
          cp -r nvim/* ~/.config/nvim/

      - name: Test Neovim startup
        run: |
          # Use gtimeout on macOS and timeout on Linux
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            TIMEOUT_CMD="gtimeout"
          else
            TIMEOUT_CMD="timeout"
          fi

          # Try to start nvim, source the config, and quit
          $TIMEOUT_CMD 30s nvim --headless -c 'quit' 2>&1 | tee nvim_startup.log

          # Check if there were any errors
          if grep -i "error" nvim_startup.log; then
            echo "Errors found in Neovim startup"
            exit 1
          fi

          # Test if we can actually enter Neovim
          $TIMEOUT_CMD 30s nvim --headless -c 'echo "Config loaded successfully" | quit' || {
            echo "Neovim failed to start properly"
            exit 1
          }

      - name: Upload startup log if failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: nvim-startup-log
          path: nvim_startup.log
